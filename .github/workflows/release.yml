name: Release
on:
  push:
    tags:
      - '*'

jobs:
  prepare_windows:
    name: Prepare (Windows)
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cargo cache
        uses: actions/cache@v2
        with:
          key: v2-${{ runner.os }}-cargo-release-${{ hashFiles('**/Cargo.lock') }}
          path: |
            %userprofile%\.cargo\registry
            %userprofile%\.cargo\git
            target\release
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --workspace --release
      - name: Zip
        working-directory: target/release
        run: powershell "Compress-Archive -CompressionLevel Optimal cactpot_solver.exe cactpot-solver-windows.zip"
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: release_windows
          path: target/release/cactpot-solver-windows.zip
          retention-days: 1
          if-no-files-found: error
      - name: Pre-caching cleanup
        working-directory: target/release
        run: powershell "Remove-Item -Path cactpot_solver.exe" && powershell "Remove-Item -Path cactpot-solver-windows.zip"
  prepare_linux:
    name: Prepare (Linux)
    runs-on: ubuntu-latest
    steps:
      - name: Install Linux deps
        run: sudo apt-get install libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev libspeechd-dev
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cargo cache
        uses: actions/cache@v2
        with:
          key: v2-${{ runner.os }}-cargo-release-${{ hashFiles('**/Cargo.lock') }}
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target/release
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --workspace --release
      - name: Copy launcher
        run: cp launch target/release/launch
      - name: Archive
        working-directory: target/release
        run: tar cf - cactpot_solver launch | xz -ze9 - > cactpot-solver-linux.tar.xz
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: release_linux
          path: target/release/cactpot-solver-linux.tar.xz
          retention-days: 1
          if-no-files-found: error
      - name: Pre-caching cleanup
        working-directory: target/release
        run: rm -f cactpot_solver launch cactpot-solver-linux.tar.xz
  release:
    name: Release
    runs-on: ubuntu-latest
    needs:
      - prepare_linux
      - prepare_windows
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts
      - name: Create release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            artifacts/release_linux/cactpot-solver-linux.tar.xz
            artifacts/release_windows/cactpot-solver-windows.zip
